(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{227:function(t,s,a){t.exports=a.p+"assets/img/1.6e050ee9.png"},275:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"css选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css选择器"}},[t._v("#")]),t._v(" css选择器")]),t._v(" "),n("h2",{attrs:{id:"分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("类型选择器：根据一个元素的标签名来选中元素 "),n("code",[t._v("div")])])]),t._v(" "),n("li",[n("p",[t._v("全体选择器：与类型选择器类似，选择任意元素")])])]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@namespace")]),t._v(" svg "),n("span",{pre:!0,attrs:{class:"token url"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http://www.w3.org/2000/svg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token atrule"}},[n("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@namespace")]),t._v(" html "),n("span",{pre:!0,attrs:{class:"token url"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http://www.w3.org/1999/xhtml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("svg|a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("stroke")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("stroke-width")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html|a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("40px\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[n("p",[t._v("id 选择器：# 后面跟随 id 名 "),n("code",[t._v("#id")])])]),t._v(" "),n("li",[n("p",[t._v("class 选择器：. 后面跟随 class 名 "),n("code",[t._v(".class")])])]),t._v(" "),n("li",[n("p",[t._v("属性选择器：通过attr=val 获取选择器 "),n("code",[t._v("[attr]")]),t._v(", "),n("code",[t._v("[attr=val]")]),t._v(", "),n("code",[t._v("[attr~=val]")]),t._v(", "),n("code",[t._v("[attr|=val]")])])]),t._v(" "),n("li",[n("p",[t._v("伪类选择器一系列由 CSS 规定好的选择器，它们以冒号开头，伪类有普通型和函数型。")])])]),t._v(" "),n("ul",[n("li",[t._v("树结构关系伪类选择器 "),n("code",[t._v(":root, :empty, :nth-child, :nth-last-child")])]),t._v(" "),n("li",[t._v("链接与行为伪类选择器 "),n("code",[t._v(":link :hover :active :focus")])]),t._v(" "),n("li",[t._v("逻辑伪类选择器 "),n("code",[t._v(":not")])])]),t._v(" "),n("h2",{attrs:{id:"组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组合"}},[t._v("#")]),t._v(" 组合")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("空格")]),t._v("： 后代， 表示选中所符合条件的后代节点(常用)")])]),t._v(" "),n("li",[n("p",[n("code",[t._v(">")]),t._v(": 子代节点（常用）")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("~")]),t._v(": 后继所有节点，表示"),n("strong",[t._v("选中所有符合条件的后继节点")]),t._v("，后继节点即跟当前节点具有同一个父元素，并出现在它之后的节点，例如“ .a~.b ”表示选中所有具有 class 为 a 的后继中，class 为 b 的节点。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("+")]),t._v(": 下一个节点，直接后继节点即 nextSlibling。例如 “.a+.b ”表示选中所有具有 class 为 a 的"),n("code",[t._v("下一个")]),t._v(" class 为 b 的节点")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("||")]),t._v("：选中符合条件的单元格， （用的少）")])])]),t._v(" "),n("p",[n("strong",[t._v("伪元素")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("::first-line (跟 HTML 代码中的换行无关)")])]),t._v(" "),n("li",[n("p",[t._v("::first-letter(第一个字母)")])]),t._v(" "),n("li",[n("p",[t._v("::before")])]),t._v(" "),n("li",[n("p",[t._v("::after")])])]),t._v(" "),n("p",[n("strong",[t._v("::first-line 和 ::first-letter 是比较类似的伪元素")]),t._v("，其中一个表示元素的第"),n("strong",[t._v("一行")]),t._v("，一个表示元素的"),n("strong",[t._v("第一个字母")])]),t._v(" "),n("p",[t._v("特殊：")]),t._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[t._v("<div>\n  <p id="),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(">First paragraph</p>\n  <p>Second paragraph</p>\n</div>\n")])])]),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div>p#a")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div::first-line")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这段代码最终结果第一行是蓝色，因为 p 是块级元素，所以"),n("strong",[t._v("伪元素出现在块级元素之内")]),t._v("，所以内层的 color 覆盖了外层的 color 属性。"),n("strong",[t._v("跟优先级没有关系")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(227),alt:"1.png"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);