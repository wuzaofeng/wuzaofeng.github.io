(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{213:function(t,r,e){t.exports=e.p+"assets/img/w1.76c48161.png"},266:function(t,r,e){"use strict";e.r(r);var a=e(0),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"工程类面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程类面试题"}},[t._v("#")]),t._v(" 工程类面试题")]),t._v(" "),a("h2",{attrs:{id:"如何优化代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优化代码"}},[t._v("#")]),t._v(" 如何优化代码")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("降低代码的"),a("strong",[t._v("解偶性")])])]),t._v(" "),a("li",[a("p",[t._v("提高函数的"),a("strong",[t._v("复用")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("分离文件")])])]),t._v(" "),a("li",[a("p",[t._v("纯函数")])]),t._v(" "),a("li",[a("p",[t._v("添加代码注释")])])]),t._v(" "),a("p",[a("strong",[t._v("对浏览器请求优化")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("添加雪碧图")])]),t._v(" "),a("li",[a("p",[t._v("减少http请求数")])]),t._v(" "),a("li",[a("p",[t._v("预加载，懒加载图片")])]),t._v(" "),a("li",[a("p",[t._v("图片小的可以采用base64")])]),t._v(" "),a("li",[a("p",[t._v("js放入body后面，css放在顶部，css和js引用外部文件")])]),t._v(" "),a("li",[a("p",[t._v("采用CDN")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5bbc1b0c6fb9a05cf230140c",target:"_blank",rel:"noopener noreferrer"}},[t._v("优秀前端必知的话题：我们应该做些力所能及的优化"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/lifesinger/lifesinger.github.com/issues/184",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web 研发模式演变 玉伯"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/wx-yy/p/10264317.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前后端分离的优缺点"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"如何有效的二次封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何有效的二次封装"}},[t._v("#")]),t._v(" 如何有效的二次封装")]),t._v(" "),a("p",[t._v("一般二次封装是为了更加灵活，为以后的修改更加便捷，易读，可扩展。")]),t._v(" "),a("p",[t._v("比如说我封装分页组件。如果不用封装多一层，会每个页面都引用该分页，那么当需要统一改分页的时候，带动的文件非常的多，而且有可能不小心改漏文件")]),t._v(" "),a("p",[t._v("如果统一管理，就不会有这个问题")]),t._v(" "),a("h2",{attrs:{id:"前后端分离的优势和劣势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离的优势和劣势"}},[t._v("#")]),t._v(" 前后端分离的优势和劣势")]),t._v(" "),a("p",[t._v("优势")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("最大的好处就是前端可以通过js做大量的处理，http请求可以通过nginx转发，"),a("strong",[t._v("减少服务器的压力")])])]),t._v(" "),a("li",[a("p",[t._v("以前是jsp，前端代码和后端代码杂糅在一起，现在两边代码真正的解耦")])]),t._v(" "),a("li",[a("p",[t._v("前后端职责很清晰， 分工明确， 提升开发效率")])]),t._v(" "),a("li",[a("p",[t._v("部署相对独立")])])]),t._v(" "),a("p",[t._v("劣势")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("代码不能复用")])]),t._v(" "),a("li",[a("p",[t._v("全异步，对 SEO 不利")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/651434092qq/p/11309535.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么要前后端分离？有什么优缺点？(转)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/59dad63ff265da065270d49e",target:"_blank",rel:"noopener noreferrer"}},[t._v("实践中的前后端分离"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"webpack3-和-webpack4区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack3-和-webpack4区别"}},[t._v("#")]),t._v(" webpack3 和 webpack4区别")]),t._v(" "),a("ol",[a("li",[t._v("mode")])]),t._v(" "),a("p",[t._v("webpack增加了一个"),a("strong",[t._v("mode配置")]),t._v("，只有两种值development | production。对不同的环境他会启用不同的配置。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("CommonsChunkPlugin")])]),t._v(" "),a("p",[a("strong",[t._v("CommonChunksPlugin")]),t._v("已经从webpack4中移除。\n可使用optimization.splitChunks进行模块划分（提取公用代码）。\n但是需要注意一个问题，默认配置只会对异步请求的模块进行提取拆分，如果要对entry进行拆分\n需要设置optimization.splitChunks.chunks = 'all'。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("webpack4使用"),a("strong",[t._v("MiniCssExtractPlugin")]),t._v("取代"),a("strong",[t._v("ExtractTextWebpackPlugin")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("代码分割。")])])]),t._v(" "),a("p",[t._v("使用"),a("strong",[t._v("动态import")]),t._v("，而不是用system.import或者require.ensure")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("vue-loader。")])]),t._v(" "),a("p",[t._v("使用vue-loader插件为.vue文件中的各部分使用相对应的loader，比如css-loader等")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("UglifyJsPlugin")])]),t._v(" "),a("p",[t._v("现在也不需要使用这个plugin了，只需要使用optimization.minimize为true就行，production mode下面自动为true")]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("optimization.minimizer可以配置你自己的压缩程序")])]),t._v(" "),a("h2",{attrs:{id:"当页面卡顿的时候"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当页面卡顿的时候"}},[t._v("#")]),t._v(" 当页面卡顿的时候")]),t._v(" "),a("p",[t._v("应该分析浏览器页面的请求，加载顺序，分析那个接口比较慢")]),t._v(" "),a("p",[t._v("再分析代码逻辑")]),t._v(" "),a("h2",{attrs:{id:"性能上有什么优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能上有什么优化"}},[t._v("#")]),t._v(" 性能上有什么优化")]),t._v(" "),a("p",[t._v("其实的在项目上都有做这些优化，只是可能觉得太常识了\n"),a("a",{attrs:{href:"https://segmentfault.com/a/1190000017556203",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化总结"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"如果图片列表全部都显示优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果图片列表全部都显示优化"}},[t._v("#")]),t._v(" 如果图片列表全部都显示优化")]),t._v(" "),a("p",[t._v("图片多的话，可以考虑用懒加载，下拉加载，分屏加载，缩略图")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/59a7725b6fb9a02497170459",target:"_blank",rel:"noopener noreferrer"}},[t._v("web前端优化之图片优化"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"现在要你完成一个dialog组件，说说你设计的思路？它应该有什么功能？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现在要你完成一个dialog组件，说说你设计的思路？它应该有什么功能？"}},[t._v("#")]),t._v(" 现在要你完成一个Dialog组件，说说你设计的思路？它应该有什么功能？")]),t._v(" "),a("ol",[a("li",[t._v("该组件需要提供hook指定渲染位置，默认渲染在body下面。")]),t._v(" "),a("li",[t._v("然后改组件可以指定外层样式，如宽度等")]),t._v(" "),a("li",[t._v("组件外层还需要一层mask来遮住底层内容，点击mask可以执行传进来的onCancel函数关闭Dialog。")]),t._v(" "),a("li",[t._v("另外组件是可控的，需要外层传入visible表示是否可见。")]),t._v(" "),a("li",[t._v("然后Dialog可能需要自定义头head和底部footer，默认有头部和底部，底部有一个确认按钮和取消按钮，确认按钮会执行外部传进来的onOk事件，然后取消按钮会执行外部传进来的onCancel事件。")]),t._v(" "),a("li",[t._v("当组件的visible为true时候，设置body的overflow为hidden，隐藏body的滚动条，反之显示滚动条。")]),t._v(" "),a("li",[t._v("组件高度可能大于页面高度，组件内部需要滚动条。")]),t._v(" "),a("li",[t._v("只有组件的visible有变化且为true时候，才重渲染组件内的所有内容。")])]),t._v(" "),a("h2",{attrs:{id:"webpack中loaders作用？plugins和loaders区别？是否写过webpack插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack中loaders作用？plugins和loaders区别？是否写过webpack插件"}},[t._v("#")]),t._v(" webpack中loaders作用？plugins和loaders区别？是否写过webpack插件")]),t._v(" "),a("p",[a("img",{attrs:{src:e(213),alt:"webpack plugins和loaders区别"}})])])}),[],!1,null,null,null);r.default=v.exports}}]);