(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{222:function(t,a,s){t.exports=s.p+"assets/img/1.2acf125d.png"},223:function(t,a,s){t.exports=s.p+"assets/img/1.f327107e.jpg"},265:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"前端面试之道的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端面试之道的理解"}},[t._v("#")]),t._v(" 前端面试之道的理解")]),t._v(" "),e("h2",{attrs:{id:"js-异步编程及常考面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-异步编程及常考面试题"}},[t._v("#")]),t._v(" JS 异步编程及常考面试题")]),t._v(" "),e("h3",{attrs:{id:"并发-concurrency-与并行-parallelism-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#并发-concurrency-与并行-parallelism-的区别"}},[t._v("#")]),t._v(" 并发(Concurrency)与并行(Parallelism)的区别")]),t._v(" "),e("p",[t._v("并发是比如两个任务A, B, "),e("strong",[t._v("同一时间段")]),t._v("通过"),e("strong",[t._v("切换")]),t._v("来完成任务")]),t._v(" "),e("p",[t._v("并行是比如两个任务A, B, 同一时间点同时并行完成任务，A,B 互不影响")]),t._v(" "),e("p",[e("img",{attrs:{src:s(222),alt:"并发和并行"}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("相关链接")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5bdf0667e51d450b267fe3e3",target:"_blank",rel:"noopener noreferrer"}},[t._v("漫话：如何给女朋友解释什么是并发和并行"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"js-基础笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-基础笔记"}},[t._v("#")]),t._v(" JS 基础笔记")]),t._v(" "),e("h3",{attrs:{id:"对象转换原始类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象转换原始类型"}},[t._v("#")]),t._v(" 对象转换原始类型")]),t._v(" "),e("ol",[e("li",[t._v("如果是字符串类型，通过 toString")]),t._v(" "),e("li",[t._v("如果是数字类型，通过 valueOf")]),t._v(" "),e("li",[t._v("如果都不是，先用 valueOf, 结果不是基础类型的话再调用 toString")])]),t._v(" "),e("h3",{attrs:{id:"this"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),e("p",[t._v("不管我们给函数 bind 几次，fn 中的 this 永远由第一次 bind 决定，所以结果永远是 window")]),t._v(" "),e("p",[t._v("bind会生成新的函数")]),t._v(" "),e("h4",{attrs:{id:"绑定都优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绑定都优先级"}},[t._v("#")]),t._v(" 绑定都优先级")]),t._v(" "),e("ol",[e("li",[t._v("new 的方式优先级最高")]),t._v(" "),e("li",[t._v("bind")]),t._v(" "),e("li",[t._v("obj.foo() 这种调用方式")]),t._v(" "),e("li",[t._v("foo()")])]),t._v(" "),e("p",[t._v("注意，如果"),e("strong",[t._v("箭头函数this被绑定")]),t._v("，就不会再被任何方式所改变")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const obj = {\n    a: () => {\n        console.log(this)\n    }\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("obj.a() // window\nobj.a.bind(obj)\nobj.a.call(obj) // window \n")])])]),e("h3",{attrs:{id:"和-比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#和-比较"}},[t._v("#")]),t._v(" == 和 ===比较")]),t._v(" "),e("ol",[e("li",[t._v("先判断类型是否相同")]),t._v(" "),e("li",[t._v("判断是不是null和undefined比较， 如果是就返回true")]),t._v(" "),e("li",[t._v("是否是"),e("code",[t._v("string")]),t._v("和"),e("code",[t._v("number")]),t._v("比较，如果是，就将"),e("code",[t._v("string")]),t._v("转"),e("code",[t._v("number")])]),t._v(" "),e("li",[t._v("一方存在是"),e("code",[t._v("boolean")]),t._v("，"),e("code",[t._v("boolean")]),t._v("转"),e("code",[t._v("number")])]),t._v(" "),e("li",[t._v("一方是"),e("code",[t._v("object")]),t._v(", 另一方是"),e("code",[t._v("string")]),t._v("、"),e("code",[t._v("number")]),t._v(" 或者 "),e("code",[t._v("symbol")]),t._v(", object转基本类型")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[] == ![] // true\n\n[] == false\n\n[] == 0\n\n'0' == 0\n\n0 == 0\n")])])]),e("h3",{attrs:{id:"深拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),e("p",[t._v("JSON.parse(JSON.stringify(object))")]),t._v(" "),e("p",[e("strong",[t._v("缺点")]),t._v("\n会忽略 undefined\n会忽略 symbol\n不能序列化函数\n不能解决循环引用的对象")]),t._v(" "),e("h3",{attrs:{id:"原型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),e("p",[e("img",{attrs:{src:s(223),alt:"原型图"}})]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Object 是所有对象的爸爸，所有对象都可以通过 "),e("strong",[t._v("proto")]),t._v(" 找到它")])]),t._v(" "),e("li",[e("p",[t._v("Function 是所有函数的爸爸，所有函数都可以通过 "),e("strong",[t._v("proto")]),t._v(" 找到它")])]),t._v(" "),e("li",[e("p",[t._v("函数的 prototype 是一个对象")])]),t._v(" "),e("li",[e("p",[t._v("对象的 "),e("strong",[t._v("proto")]),t._v(" 属性指向原型， "),e("strong",[t._v("proto")]),t._v(" 将对象和原型连接起来组成了原型链")])]),t._v(" "),e("li",[e("p",[t._v("Function.prototype 和 Object.prototype 是两个特殊的对象，他们由引擎来创建\n除了以上两个特殊对象，其他对象都是通过构造器 new 出来的")])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/KieSun/Dream/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型详情"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);