(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{305:function(t,s,a){t.exports=a.p+"assets/img/1.2acf125d.png"},306:function(t,s,a){t.exports=a.p+"assets/img/1.f327107e.jpg"},369:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前端面试之道的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端面试之道的理解"}},[t._v("#")]),t._v(" 前端面试之道的理解")]),t._v(" "),s("h2",{attrs:{id:"js-异步编程及常考面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-异步编程及常考面试题"}},[t._v("#")]),t._v(" JS 异步编程及常考面试题")]),t._v(" "),s("h3",{attrs:{id:"并发-concurrency-与并行-parallelism-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发-concurrency-与并行-parallelism-的区别"}},[t._v("#")]),t._v(" 并发(Concurrency)与并行(Parallelism)的区别")]),t._v(" "),s("p",[t._v("并发是比如两个任务A, B, "),s("strong",[t._v("同一时间段")]),t._v("通过"),s("strong",[t._v("切换")]),t._v("来完成任务")]),t._v(" "),s("p",[t._v("并行是比如两个任务A, B, 同一时间点同时并行完成任务，A,B 互不影响")]),t._v(" "),s("p",[s("img",{attrs:{src:a(305),alt:"并发和并行"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("相关链接")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5bdf0667e51d450b267fe3e3",target:"_blank",rel:"noopener noreferrer"}},[t._v("漫话：如何给女朋友解释什么是并发和并行"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"js-基础笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-基础笔记"}},[t._v("#")]),t._v(" JS 基础笔记")]),t._v(" "),s("h3",{attrs:{id:"对象转换原始类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象转换原始类型"}},[t._v("#")]),t._v(" 对象转换原始类型")]),t._v(" "),s("ol",[s("li",[t._v("如果是字符串类型，通过 toString")]),t._v(" "),s("li",[t._v("如果是数字类型，通过 valueOf")]),t._v(" "),s("li",[t._v("如果都不是，先用 valueOf, 结果不是基础类型的话再调用 toString")])]),t._v(" "),s("h3",{attrs:{id:"this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),s("p",[t._v("不管我们给函数 bind 几次，fn 中的 this 永远由第一次 bind 决定，所以结果永远是 window")]),t._v(" "),s("p",[t._v("bind会生成新的函数")]),t._v(" "),s("h4",{attrs:{id:"绑定都优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绑定都优先级"}},[t._v("#")]),t._v(" 绑定都优先级")]),t._v(" "),s("ol",[s("li",[t._v("new 的方式优先级最高")]),t._v(" "),s("li",[t._v("bind")]),t._v(" "),s("li",[t._v("obj.foo() 这种调用方式")]),t._v(" "),s("li",[t._v("foo()")])]),t._v(" "),s("p",[t._v("注意，如果"),s("strong",[t._v("箭头函数this被绑定")]),t._v("，就不会再被任何方式所改变")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window")]),t._v("\n")])])]),s("h3",{attrs:{id:"和-比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-比较"}},[t._v("#")]),t._v(" == 和 ===比较")]),t._v(" "),s("ol",[s("li",[t._v("先判断类型是否相同")]),t._v(" "),s("li",[t._v("判断是不是null和undefined比较， 如果是就返回true")]),t._v(" "),s("li",[t._v("是否是"),s("code",[t._v("string")]),t._v("和"),s("code",[t._v("number")]),t._v("比较，如果是，就将"),s("code",[t._v("string")]),t._v("转"),s("code",[t._v("number")])]),t._v(" "),s("li",[t._v("一方存在是"),s("code",[t._v("boolean")]),t._v("，"),s("code",[t._v("boolean")]),t._v("转"),s("code",[t._v("number")])]),t._v(" "),s("li",[t._v("一方是"),s("code",[t._v("object")]),t._v(", 另一方是"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("number")]),t._v(" 或者 "),s("code",[t._v("symbol")]),t._v(", object转基本类型")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("h3",{attrs:{id:"深拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),s("p",[t._v("JSON.parse(JSON.stringify(object))")]),t._v(" "),s("p",[s("strong",[t._v("缺点")]),t._v("\n会忽略 undefined\n会忽略 symbol\n不能序列化函数\n不能解决循环引用的对象")]),t._v(" "),s("h3",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),s("p",[s("img",{attrs:{src:a(306),alt:"原型图"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Object 是所有对象的爸爸，所有对象都可以通过 "),s("strong",[t._v("proto")]),t._v(" 找到它")])]),t._v(" "),s("li",[s("p",[t._v("Function 是所有函数的爸爸，所有函数都可以通过 "),s("strong",[t._v("proto")]),t._v(" 找到它")])]),t._v(" "),s("li",[s("p",[t._v("函数的 prototype 是一个对象")])]),t._v(" "),s("li",[s("p",[t._v("对象的 "),s("strong",[t._v("proto")]),t._v(" 属性指向原型， "),s("strong",[t._v("proto")]),t._v(" 将对象和原型连接起来组成了原型链")])]),t._v(" "),s("li",[s("p",[t._v("Function.prototype 和 Object.prototype 是两个特殊的对象，他们由引擎来创建\n除了以上两个特殊对象，其他对象都是通过构造器 new 出来的")])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/KieSun/Dream/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型详情"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);