(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{254:function(t,a,e){"use strict";e.r(a);var r=e(0),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"面试题2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试题2"}},[t._v("#")]),t._v(" 面试题2")]),t._v(" "),e("h2",{attrs:{id:"vue和react为什么要推崇hook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue和react为什么要推崇hook"}},[t._v("#")]),t._v(" vue和react为什么要推崇hook")]),t._v(" "),e("p",[t._v("在组件之间复用状态逻辑，多层嵌套，而抽象层都组件会形成嵌套地狱，因此react需要为共享状态提供一个更加适合都途径，那就是hook")]),t._v(" "),e("p",[t._v("代码精简， 复用的自定义 Hook")]),t._v(" "),e("p",[t._v("面向生命周期编程变成了面向业务逻辑编程")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5d3184596fb9a07eeb13e12c#heading-17",target:"_blank",rel:"noopener noreferrer"}},[t._v("从Mixins到HOC再到React Hooks"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5bfe93566fb9a049c30af2db#heading-1",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Hooks 深入不浅出"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"当页面卡顿的时候"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当页面卡顿的时候"}},[t._v("#")]),t._v(" 当页面卡顿的时候")]),t._v(" "),e("p",[t._v("应该分析浏览器页面的请求，加载顺序，分析那个接口比较慢")]),t._v(" "),e("p",[t._v("再分析代码逻辑")]),t._v(" "),e("h2",{attrs:{id:"flex布局的了解-弹性布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex布局的了解-弹性布局"}},[t._v("#")]),t._v(" flex布局的了解(弹性布局)")]),t._v(" "),e("p",[t._v("当父元素的display设置成flex的时候，就会成一个弹性容器，那么子元素变成了弹性元素，flex分为主轴和侧轴，默认是主轴")]),t._v(" "),e("p",[e("strong",[t._v("弹性容器")])]),t._v(" "),e("ul",[e("li",[t._v("flex-direction(主轴的方向， 默认横向)")]),t._v(" "),e("li",[t._v("flex-wrap（是否换行，默认不换行）")]),t._v(" "),e("li",[t._v("flex-flow（direction和wrap的间写）(direction, wrap)")]),t._v(" "),e("li",[t._v("justify-content(主轴对齐的方式)")]),t._v(" "),e("li",[t._v("align-items（侧轴的对齐方式）")]),t._v(" "),e("li",[t._v("align-content (多个主轴线的对齐方式)")])]),t._v(" "),e("p",[e("strong",[t._v("弹性元素")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("order（顺序排列，数字越小越在前面）（可以负数）")])]),t._v(" "),e("li",[e("p",[t._v("flex-grow (放大的比例，默认0)")])]),t._v(" "),e("li",[e("p",[t._v("flex-shrink (缩小的比例， 默认1)")])]),t._v(" "),e("li",[e("p",[t._v("flex-basis(占据主轴的空间大小，默认auto)")])]),t._v(" "),e("li",[e("p",[t._v("flex (none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'>)(简写)")])]),t._v(" "),e("li",[e("p",[t._v("align-self（允许单个元素与其他不对齐）")])])]),t._v(" "),e("p",[t._v("flex 根据内容剩余空间占据的大小")]),t._v(" "),e("p",[t._v("三等份就是flex: 1, 应该说flex剩余空间比例的大小\n如果不设置flex: 1，默认auto，是根据内容的大小伸缩\n如果内容多，但还是想三等份（flex: 1就可以了）")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Flex",target:"_blank",rel:"noopener noreferrer"}},[t._v("flex"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"性能上有什么优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能上有什么优化"}},[t._v("#")]),t._v(" 性能上有什么优化")]),t._v(" "),e("p",[t._v("其实的在项目上都有做这些优化，只是可能觉得太常识了\n"),e("a",{attrs:{href:"https://segmentfault.com/a/1190000017556203",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化总结"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"如果图片列表全部都显示优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果图片列表全部都显示优化"}},[t._v("#")]),t._v(" 如果图片列表全部都显示优化")]),t._v(" "),e("p",[t._v("图片多的话，可以考虑用懒加载，下拉加载，分屏加载，缩略图")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/59a7725b6fb9a02497170459",target:"_blank",rel:"noopener noreferrer"}},[t._v("web前端优化之图片优化"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"说一下浏览器的缓存机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说一下浏览器的缓存机制"}},[t._v("#")]),t._v(" 说一下浏览器的缓存机制")]),t._v(" "),e("h3",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),e("p",[t._v("第一次直接服务器请求，第二次直接拿缓存")]),t._v(" "),e("p",[t._v("强缓存方案")]),t._v(" "),e("p",[t._v("Exprires: 该资源什么时候会过期， 缺点就是需要客户端时间和服务器时间要同步")]),t._v(" "),e("p",[t._v("Cache-control：max-age：表示该资源多少时间后过期（毫秒）")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/6782944-2953183b0a2ab1dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/751/format/webp",alt:"1.jpg"}})]),t._v(" "),e("h3",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),e("p",[t._v("第一次请求缓存且"),e("strong",[t._v("保存缓存标识与时间")]),t._v("，重复请求向服务器发送缓存标识和最后缓存时间，"),e("strong",[t._v("服务端进行校验")]),t._v("，如果失效则使用缓存")]),t._v(" "),e("p",[t._v("If-None-Match/ETag：缓存标识")]),t._v(" "),e("p",[t._v("Last-modified/If-Modified-Since: 表明请求的资源上次的修改时间")]),t._v(" "),e("h2",{attrs:{id:"现在要你完成一个dialog组件，说说你设计的思路？它应该有什么功能？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#现在要你完成一个dialog组件，说说你设计的思路？它应该有什么功能？"}},[t._v("#")]),t._v(" 现在要你完成一个Dialog组件，说说你设计的思路？它应该有什么功能？")]),t._v(" "),e("ol",[e("li",[t._v("该组件需要提供hook指定渲染位置，默认渲染在body下面。")]),t._v(" "),e("li",[t._v("然后改组件可以指定外层样式，如宽度等")]),t._v(" "),e("li",[t._v("组件外层还需要一层mask来遮住底层内容，点击mask可以执行传进来的onCancel函数关闭Dialog。")]),t._v(" "),e("li",[t._v("另外组件是可控的，需要外层传入visible表示是否可见。")]),t._v(" "),e("li",[t._v("然后Dialog可能需要自定义头head和底部footer，默认有头部和底部，底部有一个确认按钮和取消按钮，确认按钮会执行外部传进来的onOk事件，然后取消按钮会执行外部传进来的onCancel事件。")]),t._v(" "),e("li",[t._v("当组件的visible为true时候，设置body的overflow为hidden，隐藏body的滚动条，反之显示滚动条。")]),t._v(" "),e("li",[t._v("组件高度可能大于页面高度，组件内部需要滚动条。")]),t._v(" "),e("li",[t._v("只有组件的visible有变化且为true时候，才重渲染组件内的所有内容。")])]),t._v(" "),e("h2",{attrs:{id:"addeventlistener-默认是冒泡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#addeventlistener-默认是冒泡"}},[t._v("#")]),t._v(" addEventListener 默认是冒泡")]),t._v(" "),e("h2",{attrs:{id:"web安全信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web安全信息"}},[t._v("#")]),t._v(" web安全信息")]),t._v(" "),e("h3",{attrs:{id:"xss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" xss")]),t._v(" "),e("p",[t._v("持久型跨站: 跨站代码存储在服务器,数据库\n非持久型跨站: 反射型跨站脚本漏洞，最普遍的类型\nDOM跨站: 客户端脚本处理逻辑导致的安全问题")]),t._v(" "),e("p",[t._v("基于DOM的XSS漏洞是指受害者端的网页脚本在修改本地页面DOM环境时未进行合理的处置，而使得攻击脚本被执行")]),t._v(" "),e("h2",{attrs:{id:"什么是宏任务，什么是微任务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是宏任务，什么是微任务"}},[t._v("#")]),t._v(" 什么是宏任务，什么是微任务")]),t._v(" "),e("h2",{attrs:{id:"http有什么特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http有什么特点"}},[t._v("#")]),t._v(" http有什么特点")]),t._v(" "),e("ol",[e("li",[t._v("无状态")]),t._v(" "),e("li",[t._v("简单")]),t._v(" "),e("li",[t._v("快速")]),t._v(" "),e("li",[t._v("没有格式的限制")])]),t._v(" "),e("h2",{attrs:{id:"盒子模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),e("h2",{attrs:{id:"什么是垃圾回收机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是垃圾回收机制"}},[t._v("#")]),t._v(" 什么是垃圾回收机制")]),t._v(" "),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);a.default=v.exports}}]);