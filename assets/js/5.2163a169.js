(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{209:function(t,e,a){t.exports=a.p+"assets/img/1.08adacf0.jpg"},219:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"高性能javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高性能javascript"}},[t._v("#")]),t._v(" 高性能javascript")]),t._v(" "),n("h2",{attrs:{id:"浏览器在代码执行的过程中遇到script标签都会阻塞浏览器执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器在代码执行的过程中遇到script标签都会阻塞浏览器执行"}},[t._v("#")]),t._v(" 浏览器在代码执行的过程中遇到script标签都会阻塞浏览器执行")]),t._v(" "),n("ul",[n("li",[t._v("位置：script代码"),n("strong",[t._v("适合放置")]),t._v("于body"),n("strong",[t._v("结束标签前")]),t._v("，确保页面渲染之后再执行脚本，不会导致长时间空白屏")]),t._v(" "),n("li",[t._v("合并："),n("strong",[t._v("合并脚本")]),t._v("，减少script标签，不管是外链还是内嵌脚本")]),t._v(" "),n("li",[t._v("下载方式：优化script代码无非就是保证script"),n("strong",[t._v("最后执行")]),t._v("，无阻塞执行\n"),n("ul",[n("li",[t._v("script标签使用"),n("strong",[t._v("defer")]),t._v("属性")]),t._v(" "),n("li",[n("strong",[t._v("动态创建")]),t._v("script标签")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('function loadScript(url, script) {\n  var script=document.createElement(\'script\')\n  script.type="text/javascript";\n  if(script.readyState){ // IE\n    script.onreadystatechange = function () {\n    if (script.readyState === "loaded" || script.readyState === "complete") {\n      script.onreadstatechange = null;\n      callback();\n    } else { // 其他浏览器\n        script.onload = function () {\n          callback();\n        }\n    }\n    script.src = url\n    document.getElementsByTagName("body")[0].appendClid(script)\n    }\n  }\n}\n')])])]),n("ul",[n("li",[n("strong",[t._v("xhr对象")]),t._v("执行下载javascript"),n("strong",[t._v("注入")]),t._v("到页面中")])])])]),t._v(" "),n("h3",{attrs:{id:"常用的延时加载库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用的延时加载库"}},[t._v("#")]),t._v(" 常用的延时加载库")]),t._v(" "),n("ul",[n("li",[t._v("YUI3")]),t._v(" "),n("li",[t._v("LazyLoad")]),t._v(" "),n("li",[t._v("LABjs")])]),t._v(" "),n("h2",{attrs:{id:"对象的优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象的优化"}},[t._v("#")]),t._v(" 对象的优化")]),t._v(" "),n("ul",[n("li",[t._v("访问"),n("strong",[t._v("字面量")]),t._v("和"),n("strong",[t._v("变量")]),t._v("比访问"),n("strong",[t._v("对象")]),t._v("和"),n("strong",[t._v("对象成员")]),t._v("要快")]),t._v(" "),n("li",[t._v("经常定义"),n("strong",[t._v("局部变量")]),t._v("，作用域链位置越深，访问所需的时间更长")]),t._v(" "),n("li",[n("strong",[t._v("属性")]),t._v("和"),n("strong",[t._v("方法原型")]),t._v("的"),n("strong",[t._v("位置越深")]),t._v("，访问的时间越长")]),t._v(" "),n("li",[t._v("一般来说，常访问的变量将一个"),n("strong",[t._v("局部变量")]),t._v("来保存，可以"),n("strong",[t._v("提高访问速度")])])]),t._v(" "),n("h2",{attrs:{id:"dom节点优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom节点优化"}},[t._v("#")]),t._v(" Dom节点优化")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("减少")]),t._v("dom节点的"),n("strong",[t._v("访问次数")])]),t._v(" "),n("ul",[n("li",[t._v("innerHTML（常用）")]),t._v(" "),n("li",[t._v("cloneNode(克隆方法）")])])]),t._v(" "),n("li",[n("p",[t._v("多次访问某个dom节点，使用"),n("strong",[t._v("局部变量")]),t._v("来"),n("strong",[t._v("存储")])])]),t._v(" "),n("li",[n("p",[t._v("html集合会实时连接着底层文档，将集合长度"),n("strong",[t._v("缓存")]),t._v("在一个"),n("strong",[t._v("变量")]),t._v("中，如果经常使用该集合，可以转成"),n("strong",[t._v("数组")]),t._v("来使用，使用数组比使用集合要快N倍")])]),t._v(" "),n("li",[n("p",[t._v("披露修改dom节点时，需将元素"),n("strong",[t._v("脱离文档流")]),t._v("，处理dom元素之后，再带回文档中")]),t._v(" "),n("h4",{attrs:{id:"脱离文档流方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#脱离文档流方法"}},[t._v("#")]),t._v(" 脱离文档流方法")]),t._v(" "),n("ul",[n("li",[t._v("隐藏元素，引用修改，重新显示，使用display")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('var ul = document.getElementById(\'list\');\nul.style.display="none"\nappendDataToElement(ul, data) // 更新节点通用函数\nul.style.display="block"\n')])])]),n("ul",[n("li",[t._v("使用文档片段document.createDocumentFragment来操作（"),n("strong",[t._v("最优")]),t._v("）")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var fragment = document.createDocumentFragment()\nappendDataToElement(fragment, data) // 更新节点通用函数\ndocument.getElement('list').appendChild(fragment)\n")])])]),n("ul",[n("li",[t._v("先克隆元素，在处理")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var old=document.getElementById('list')\nvar clone = old.cloneNode(true)\nappendDataToElement(fragment, data) // 更新节点通用函数\nold.parentNode.replace(clone, old)\n")])])])]),t._v(" "),n("li",[n("p",[t._v("常用的方法")])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("属性名")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("被代替的属性名")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("children")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("childNodes")])]),t._v(" "),n("tr",[n("td",[t._v("childElementCount")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("childNodes.length")])]),t._v(" "),n("tr",[n("td",[t._v("firstElementChild")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("firstChild")])]),t._v(" "),n("tr",[n("td",[t._v("lastElementChild")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("lastChild")])]),t._v(" "),n("tr",[n("td",[t._v("nextElementSibling")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("nextSibling")])]),t._v(" "),n("tr",[n("td",[t._v("previousElementSibling")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("previousSibling")])])])]),t._v(" "),n("ul",[n("li",[t._v("动画使用绝对定位，使用拖放代理")]),t._v(" "),n("li",[t._v("使用事件委托减少事件处理器的数量")])]),t._v(" "),n("h2",{attrs:{id:"js的算法和流程控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js的算法和流程控制"}},[t._v("#")]),t._v(" JS的算法和流程控制")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("使用"),n("strong",[t._v("for")]),t._v(", "),n("strong",[t._v("while")]),t._v(", 和"),n("strong",[t._v("do-while")]),t._v("循环性能特性相当，但避免使用"),n("strong",[t._v("for-in")]),t._v("循环，除非需要遍历一个属性未知的对象， "),n("strong",[t._v("函数的迭代forEach, map")]),t._v("性能比"),n("strong",[t._v("原始的for循环")])])]),t._v(" "),n("li",[n("p",[t._v("使用"),n("strong",[t._v("查找表")]),t._v("比if-else和switch更快")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 返回值集合存入数组\nvar results = [result0, result1, result2]\n// 返回当前的结果\nreturn results[value]\n")])])]),n("ul",[n("li",[n("p",[n("strong",[t._v("递归")]),t._v("：函数通过自身反复的调用，或者"),n("strong",[t._v("两个函数")]),t._v("之间"),n("strong",[t._v("反复")]),t._v("的调用达到循环的目的。递归会有栈溢出的风险")]),t._v(" "),n("p",[n("strong",[t._v("迭代（遍历）")]),t._v("：递归的实现算法都可以用迭代来实现，通过"),n("strong",[t._v("循环")]),t._v("来实现")])])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),n("p",[t._v("如果由于使用"),n("strong",[t._v("递归")]),t._v("算法导致"),n("strong",[t._v("栈溢出")]),t._v("，可以考虑使用迭代算法或者memoization来避免重复计算")])]),t._v(" "),n("h2",{attrs:{id:"字符串和正则表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串和正则表达式"}},[t._v("#")]),t._v(" 字符串和正则表达式")]),t._v(" "),n("ul",[n("li",[t._v("如果考虑"),n("strong",[t._v("ie7")]),t._v("以及更早的版本的话，可以使用"),n("strong",[t._v("数组合并")]),t._v("，再转成字符串。不考虑的话使用"),n("strong",[t._v("简单的+和+=操作符")]),t._v("来替代")]),t._v(" "),n("li",[t._v("回溯既是正则表达式匹配功能的基本组成部分，也是正则表达式的低效之源，回溯失控发生于正则表达式原本能快速匹配的地方，由于某些特殊字符导致运行缓慢甚至浏览器奔溃")])]),t._v(" "),n("h4",{attrs:{id:"避免该问题的发生"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#避免该问题的发生"}},[t._v("#")]),t._v(" 避免该问题的发生")]),t._v(" "),n("ul",[n("li",[t._v("使用"),n("strong",[t._v("相邻")]),t._v("的"),n("strong",[t._v("字元互斥")])]),t._v(" "),n("li",[t._v("避免量词对同一字符串的"),n("strong",[t._v("相同部分多次匹配")])]),t._v(" "),n("li",[t._v("通过服用利用"),n("strong",[t._v("预查的原子组")]),t._v("去除不必要的回溯")])]),t._v(" "),n("h2",{attrs:{id:"js代码编程实战"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js代码编程实战"}},[t._v("#")]),t._v(" js代码编程实战")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("避免双重求值")]),t._v("， 因为通过动态执行字符串时，会自动创建一个新的解析器实例，来执行这字符串\n动态执行字符串中的js方法：")]),t._v(" "),n("ul",[n("li",[t._v("eval()"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("eval('num1+num2')\n")])])])]),t._v(" "),n("li",[t._v("function()构造器"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("new Function('num1','num2', 'return num1+num2' )\n")])])])]),t._v(" "),n("li",[t._v("setTimeout"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("setTimeout('num1+num2', 25)\n")])])])]),t._v(" "),n("li",[t._v("setTimeInterval"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("setTimeInterval('num1+num2', 25)\n")])])])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("避免重复工作")]),t._v(" 需要检测浏览器时，可以使用延迟加载或条件预加载")])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function addHandler(target, eventType, handler) {\n    if (target.addEventListener) {\n        target.addEventListener(eventType, handle, false)\n    } else { // IE\n      target.attactEvent('on' + eventType, handler)\n    }\n}\n")])])]),n("h4",{attrs:{id:"解决办法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法")]),t._v(" "),n("ul",[n("li",[t._v("延迟加载: 第一次调用时，先检查一下并决定使用那个方法，然后原始函数会被正确的函数覆盖")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    function addHandler(target, eventType, handler) {\n    if (target.addEventListener) {\n        addHandler = target.addEventListener(eventType, handle, false)\n    } else { // IE\n      addHandler = target.attactEvent('on' + eventType, handler)\n    }\n    // 调用新函数，并且覆盖\n    addHandler(target, eventType, handler)\n} \n")])])]),n("ul",[n("li",[t._v("条件预加载: 在脚本加载时直接提前检测，不会等到调用时再检测")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("var addHandle = document.body.addEventListener ? function addHandler(target, eventType, handler) {\ntarget.addEventListener(eventType, handle, false)\n} : function addHandler(target, eventType, handler) {\n      // IEtarget.attactEvent('on' + eventType, handler)\n    }\n")])])]),n("ul",[n("li",[t._v("尽量使用直接量创建对象或数组，直接量比非直接量的形式要快")]),t._v(" "),n("li",[t._v("数学计算时，考虑使用操作数字的二进制形式的"),n("a",{attrs:{href:"https://juejin.im/post/5dc36f39e51d4529ed292910",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("位运算")]),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("尽量用js中的原生方法，比如Math方法")])]),t._v(" "),n("h4",{attrs:{id:"书籍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#书籍"}},[t._v("#")]),t._v(" 书籍")]),t._v(" "),n("p",[n("img",{attrs:{src:a(209),alt:"高性能javascript"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);